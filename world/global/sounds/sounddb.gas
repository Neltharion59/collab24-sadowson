//////////////////////////////////////////////////////////////////////////////
// Documentation

/*

	EVENT RULES


*** Material Events ***

	A "material event" is a sound event that requires looking up a material
	for the involved game object(s) in the sounddb. When looking up a
	material, if it's not found in the sounddb, we fall back to "generic" on
	source, then on destination.

	Rules

		To find source material, check in this order: ammo, weapon hand, actor.
		So an archer could have a source of "arrow", a spellcaster could have
		a source of "fireball", a fighter could have a source of "steel", and
		a krug grunt could have a source of "flesh" (fists).

		To find destination material, check in this order: shield, torso armor,
		actor. Note that critical hits, because they bypass armor completely,
		will always use the actor for the destination material.

	attack_hit_glance:

		Attacker succeeds in hitting defender, doing < 50% of possible damage.

	attack_hit_solid:

		Attacker succeeds in hitting defender, doing >= 50% of possible damage.
		If this event does not exist, fall back to attack_hit_glance.

	attack_hit_critical:

		Attacker gets a critical hit on defender, breaking through armor and
		scoring a kill. Destination material is always actor material. If this
		event does not exist, fall back to attack_hit_solid.

	attack_miss:

		Attacker either completely misses defender or armor completely blocks
		the attack. Play either a swoosh sound or a dull clang (randomly).

*** Voice Events ***

	A "voice event" is a sound event that is specific to a particular object,
	and does not necessarily require a material type. When a voice event is
	requested, we try to play a sound by querying in the following order:

		1. Check object aspect:voice block for event. Note that this block
		   inherits like any other internal block.

		2. If the object's material is not generic, check the [sounddb] using
		   the object's material as the source and generic as the dest type.

		3. Check [global_voice] in this file.

	The "voice" block is a set of object-specific voice-type sounds. Subblock
	names are the name of the event, and then generic entries for the names of
	the sounds to play for those events.

	hit_glance:

		Object just got hit by a glancing attack. If the hit was a final
		death blow, play die instead.

	hit_solid:

		Object just got hit by a solid attack. Fall back to hit_glance if
		this event does not exist. If the hit was a final death blow, play
		die instead.

	hit_critical:

		Object just got critically hit and died. Use instead of "die". Fall back
		to "die" if this event does not exist.

	die:

		Object was killed. "Avenge my death" or scream or whatever.

	attack:

		Actors make this when starting a melee attack (grunt or whatever).
		If ranged, then the weapon makes this sound (bow will twang) plus
		add in the sound of the ammo's attack (possibly a whooshing of fire
		arrow) on top. If casting a spell, then use the spell's "attack
		voice" instead.

	select_char:

		Sound played when a specific actor is selected.

	order_attack:

		Actor is directed to attack something.

	order_move:

		Issue move command from gui.

	order_cant_move:

		Can't move to that location (from gui).

	order_stop:

		Issue stop command from gui.

	order_out_of_mana:

		Not enough mana to cast spell.

	used:

		Item was used. Lever pulled, button pushed, simple elevator activated,
		etc.

	opened:

		Item was opened, like chest, door, etc.

	closed:

		Item was closed.

	break:

		Object is exploded/broken. Wooden barrel smash sound, or flesh gib
		splatter sound.

	put_down_toss:

		Object is tossed up into the air
		Destination is always generic, source is from the object itself.

	put_down:

		Object is dropped on ground or into inventory from inventory.
		Destination is always generic, source is from the object itself.

	pick_up:

		Object is picked up out of the gridbox in inventory. Destination is
		always generic, source is from the object itself.

	equip:

		Object was equipped.

	unequip:

		Object was unequipped.

	drink:

		Object was drunk.
*/

[sounddb]
{
	/*	format:

			$ note that multiple sounds are supported per event name. we'll
			  just pick one at random.

		[source_material]
		{
			[destination_material]
			{
				[event]
				{
					* = sound_name;
					priority = low, norm, high, or always;
					...
				}

				...
			}

			...
		}

		...

		note that "generic" is used if the material name is empty in the aspect.

		shorter format:

		source_material:destination_material:event:* = sound_name;
		source_material:destination_material:event:priority = norm;


	*/

//	SOURCE		DEST		EVENT					SOUND

    ////////////////
	//WORLD OBJECTS
    ///////////////
	//Levers
	chain:      	generic     :lever_start 			:* = s_e_lever_winch;
	chain:      	generic     :lever_end				:* = s_e_lever_winch;
	chain2:      	generic     :lever_start 			:* = s_e_env_lever_chain;
	chain2:      	generic     :lever_end   			:* = s_e_env_lever_chain;
	chain3:      	generic     :lever_start 			:* = s_e_env_lever_metal_elaborate;
	chain3:      	generic     :lever_end   			:* = s_e_env_lever_metal_elaborate;
	steel:      	generic     :lever_start           	:* = s_e_env_lever_metal; // from set 2001-07-02a
	steel:      	generic     :lever_end	         	:* = s_e_env_lever_metal; // from set 2001-07-02a
	steel_large:   	generic     :lever_start           	:* = s_e_env_crane_stop; // from set 2001-07-02a
	steel_large:   	generic     :lever_end	         	:* = s_e_env_crane_stop; // from set 2001-07-02a
	stone_statue:	generic		:lever_start			:* = s_e_env_statue_spin;
	stone_statue:	generic		:lever_end				:* = s_e_env_statue_spin;
	stone_statue2:	generic		:lever_start			:* = s_e_nis_chamberstars_statue_spin;
	stone_statue2:	generic		:lever_end				:* = s_e_nis_chamberstars_statue_spin;
	wood:			generic     :lever_start          	:* = s_e_env_lever_wood_small; //from set 2001-05-03
	wood:      		generic     :lever_end	         	:* = s_e_env_lever_wood_small; //from set 2001-05-03
    crank:       	generic     :lever_start          	:* = s_e_env_crank_metal; // from set 2001-07-10
    crank:       	generic     :lever_end          	:* = s_e_env_crank_metal; // from set 2001-07-10
    crank2:       	generic     :lever_start          	:* = s_e_env_valve_small; // from set 2001-07-10
    crank2:       	generic     :lever_end          	:* = s_e_env_valve_small; // from set 2001-07-10
	button_metal:  	generic     :lever_start          	:* = s_e_env_button_metal;
    button_metal:  	generic     :lever_end          	:* = s_e_env_button_metal;
    button_stone:  	generic     :lever_start          	:* = s_e_env_button_stone; //Waiting to be added
    button_stone:  	generic     :lever_end          	:* = s_e_env_button_stone;

	//Chests
	steel:      	generic     :chest_open         	:* = s_e_chest_m_open;
	steel:      	generic     :chest_close        	:* = s_e_chest_m_close;
	wood: 			generic     :chest_open         	:* = s_e_chest_m_open;
	wood:      		generic     :chest_close        	:* = s_e_chest_m_close;
	wood:			generic     :chest_blocked         	:* = s_e_hit_wood_wood;
	wood:			generic     :chest_locked         	:* = s_e_gui_put_down_armor_chain;
	stone:			generic		:chest_open         	:* = s_e_env_sarc_lid_slide_SED; // s_e_env_button_stone SED @ .80
	stone:			generic		:chest_close        	:* = s_e_env_sarc_lid_slide_SED; // s_e_env_button_stone SED @ .80
   	stone:			generic     :chest_blocked         	:* = s_e_frontend_tiny_button;
	stone:			generic     :chest_locked         	:* = s_e_gui_put_down_armor_chain;

	//Doors and Grates
	wood: 			generic     :door_open	         	:* = s_e_door_standard_open;
	wood:      		generic     :door_close        		:* = s_e_door_standard_open;
    wood_dungeon:	generic     :door_open	         	:* = s_e_env_door_dungeon;
	wood_dungeon:	generic     :door_close        		:* = s_e_env_door_dungeon;
	wood_slide:		generic     :door_open	         	:* = s_e_env_door_wood_slide_lrg;
	wood_slide:		generic     :door_close        		:* = s_e_env_door_wood_slide_lrg;
    wood_small:		generic     :door_open	         	:* = s_e_env_elevator_lrg_stop;
	wood_small:		generic     :door_close        		:* = s_e_env_elevator_lrg_stop;
	wood_medium:	generic     :door_blocked         	:* = s_e_hit_wood_wood;
	wood_medium:	generic     :door_locked         	:* = s_e_gui_put_down_armor_chain;
	wood_medium:	generic     :door_open	         	:* = s_e_env_door_wood_sliding_medium;
	wood_medium:	generic     :door_close        		:* = s_e_env_door_wood_sliding_medium;
	wood_ice: 		generic     :door_open	         	:* = s_e_env_volcanic_geyser;
	wood_ice:		generic     :door_close        		:* = s_e_env_volcanic_geyser;
	wood_ice: 		generic     :door_opened         	:* = s_e_env_elevator_grate_stop;
	wood_ice:		generic     :door_closed       		:* = s_e_env_elevator_grate_stop;
	chains_large:	generic     :door_open        		:* = s_e_env_door_wood_slide_lrg;
	chains_large:	generic     :door_close        		:* = s_e_env_door_wood_slide_lrg;
	chains_pulley:	generic     :door_open	         	:* = s_e_env_chains_pulley;
	chains_pulley:	generic     :door_close        		:* = s_e_env_chains_pulley;
	chains_pulley:	generic     :door_opened         	:* = s_e_env_elevator_lrg_start;
	chains_pulley:	generic     :door_closed       		:* = s_e_env_elevator_lrg_start;
	dm_exit2:		generic     :door_open        		:* = s_e_env_gears_mill_sm;
	dm_exit2:		generic     :door_close        		:* = s_e_env_gears_mill_sm;
	dm_exit2:		generic     :door_opened       		:* = s_e_env_crane_stop;
	dm_exit2:		generic     :door_closed       		:* = s_e_env_crane_stop;
   	dm_gate:		generic     :door_open	         	:* = s_e_die_fury;
    dm_gate:   		generic     :door_close        		:* = s_e_die_fury;
	dm_gate:		generic     :door_opened         	:* = s_e_env_elevator_grate_stop;
	dm_gate:   		generic     :door_closed       		:* = s_e_env_elevator_grate_stop;
	dm_gate:		generic     :door_blocked         	:* = s_e_attack_igniter;
	dm_gate:		generic     :door_locked         	:* = s_e_env_elevator_pulley_stop;
	ac_stone:		generic     :door_open        		:* = s_e_FBfireball_hit;
	ac_stone:		generic     :door_close        		:* = s_e_FBfireball_hit;
	wood_large:		generic     :door_open        		:* = s_e_env_door_metal_sliding_small;
	wood_large:		generic     :door_close        		:* = s_e_env_door_metal_sliding_small;
	stone: 			generic     :door_open	         	:* = s_e_env_door_stone_open;
	stone:     		generic     :door_close        		:* = s_e_env_door_stone_close;
	stone:			generic     :door_blocked         	:* = s_e_spell_fire_pillar_cast;
	stone:			generic     :door_locked         	:* = s_e_env_elevator_pulley_stop;
	stone_small: 	generic     :door_open	         	:* = s_e_env_door_stone_small;
	stone_small:	generic     :door_close        		:* = s_e_env_door_stone_small;
	stone_medium: 	generic     :door_open	         	:* = s_e_env_button_stone;
	stone_medium:	generic     :door_close        		:* = s_e_env_button_stone;
	stone_medium: 	generic     :door_opened         	:* = s_e_env_elevator_lrg_start;
	stone_medium:	generic     :door_closed       		:* = s_e_env_elevator_lrg_start;
	stone_large: 	generic     :door_open	         	:* = s_e_env_door_stone_small;
	stone_large:	generic     :door_close        		:* = s_e_env_door_stone_small;
	stone_huge: 	generic     :door_open	         	:* = s_e_env_door_stone_huge_open;
	stone_huge:		generic     :door_close        		:* = s_e_env_door_stone_huge_open;
	steel:      	generic     :grate_open        		:* = s_e_grate_open;
    steel:      	generic     :grate_close       		:* = s_e_grate_close;
    steel_slide1:  	generic     :door_open        		:* = s_e_env_door_metal_sliding_large;
    steel_slide1:  	generic     :door_close        		:* = s_e_env_door_metal_sliding_large;
	steel_slide2:  	generic     :door_open       		:* = s_e_env_door_metal_sliding_small;
	steel_slide2:  	generic     :door_close       		:* = s_e_env_door_metal_sliding_small;
	grate: 			generic     :door_open	         	:* = s_e_env_grate_metal;
	grate:     		generic     :door_close        		:* = s_e_env_grate_metal;
	grate_sliding:	generic     :door_open	         	:* = s_e_env_grate_metal_sliding;
	grate_sliding:	generic     :door_close        		:* = s_e_env_grate_metal_sliding;


	//Generators
	foliage:		generic		:gen_start				:* = s_e_env_brush_rustle_SED;
	foliage:		generic		:gen_end				:* = s_e_env_brush_rustle_SED;
 	steel:      	generic     :gen_start        		:* = s_e_grate_open;
    steel:      	generic     :gen_end       			:* = s_e_grate_close;
    bush:           generic     :gen_start        		:* = s_e_env_brush_rustle_SED;
	flesh:			generic		:gen_start				:* = s_e_IH_meat_explosion;
	flesh:			generic		:gen_end				:* = s_e_IH_meat_explosion;
	ice:			generic		:gen_start				:* = s_e_die_ice_warrior;
	ice:			generic		:gen_end				:* = s_e_die_ice_warrior;

	//Elevators
	elevator:		ac_rock		:moving_2				:* = s_e_spell_tremor_cast;
	elevator:		ac_rock		:level_1				:* = s_e_explode_rockbeast;
	elevator:		ac_stone	:level_2    			:* = s_e_env_elevator_pulley_stop;
	elevator:		dm_crane	:moving_1				:* = s_e_env_crane_start;// from set 2001-07-11
	elevator:		dm_crane	:moving_2    			:* = s_e_env_crane_start;// from set 2001-07-11
	elevator:		dm_crane	:level_1				:* = s_e_env_crane_stop;// from set 2001-07-11
	elevator:		dm_crane	:level_2    			:* = s_e_env_crane_stop;// from set 2001-07-11
	elevator:		sd_large	:moving_1    			:* = s_e_env_elevator_lrg_start;// from set 2001-07-11
	elevator:		sd_large	:moving_2    			:* = s_e_env_elevator_lrg_start;// from set 2001-07-11
	elevator:		sd_large	:level_1    			:* = s_e_env_elevator_lrg_stop;// from set 2001-07-11
	elevator:		sd_large	:level_2    			:* = s_e_env_elevator_lrg_stop;// from set 2001-07-11
	elevator:		dm_small	:moving_1    			:* = s_e_env_elevator_start;// from set 2001-07-11
	elevator:		dm_small	:moving_2    			:* = s_e_env_elevator_start;// from set 2001-07-11
	elevator:		dm_small	:level_1    			:* = s_e_env_elevator_stop;// from set 2001-07-11
	elevator:		dm_small	:level_2    			:* = s_e_env_elevator_stop;// from set 2001-07-11
	elevator:		ds_raft		:moving_1    			:* = s_e_env_raft_depart;// from set 2001-07-11
	elevator:		ds_raft		:moving_2    			:* = s_e_env_raft_depart;// from set 2001-07-11
	elevator:		ds_raft		:level_1    			:* = s_e_env_raft_arrive;// from set 2001-07-11
	elevator:		ds_raft		:level_2    			:* = s_e_env_raft_arrive;// from set 2001-07-11
	elevator:		gi_pneum	:moving_1    			:* = s_e_env_elevator_pneumatic_start;// from set 2001-07-11
	elevator:		gi_pneum	:moving_2    			:* = s_e_env_elevator_pneumatic_start;// from set 2001-07-11
	elevator:		gi_pneum	:level_1    			:* = s_e_env_elevator_pneumatic_stop;// from set 2001-07-11
	elevator:		gi_pneum	:level_2    			:* = s_e_env_elevator_pneumatic_stop;// from set 2001-07-11
	elevator:		gi_slide	:moving_1    			:* = s_e_env_platform_metal_sliding_start;// from set 2001-07-11
	elevator:		gi_slide	:moving_2    			:* = s_e_env_platform_metal_sliding_start;// from set 2001-07-11
	elevator:		gi_slide	:level_1    			:* = s_e_env_platform_metal_sliding_stop;// from set 2001-07-11
	elevator:		gi_slide	:level_2    			:* = s_e_env_platform_metal_sliding_stop;// from set 2001-07-11
	elevator:		gi_pulley	:moving_1    			:* = s_e_env_chains_pulley;//Don't know what this sound is supposed to be used for.
	elevator:		gi_pulley	:moving_2    			:* = s_e_env_chains_pulley;//Don't know what this sound is supposed to be used for.
	elevator:		gi_gears	:moving_1    			:* = s_e_env_gears_metal_large;
	elevator:		gi_gears	:moving_2    			:* = s_e_env_gears_metal_large;
   	elevator: 		stone_hidden:moving_1	         	:* = s_e_env_door_GI_exit;
	elevator:		stone_hidden:moving_2        		:* = s_e_env_door_GI_exit;
	elevator:		fh_grate	:moving_1    			:* = s_e_env_elevator_grate_start;
	elevator:		fh_grate	:moving_2    			:* = s_e_env_elevator_grate_start;
	elevator:		fh_grate	:level_1    			:* = s_e_env_elevator_grate_stop;
	elevator:		fh_grate	:level_2    			:* = s_e_env_elevator_grate_stop;
	elevator:		dc_pulley	:moving_1    			:* = s_e_env_elevator_pulley_start;
	elevator:		dc_pulley	:moving_2    			:* = s_e_env_elevator_pulley_start;
	elevator:		dc_pulley	:level_1    			:* = s_e_env_elevator_pulley_stop;
	elevator:		dc_pulley	:level_2    			:* = s_e_env_elevator_pulley_stop;
	elevator:		cr_door		:moving_1    			:* = s_e_env_door_stone_small;
	elevator:		cr_door		:moving_2    			:* = s_e_env_door_stone_small;
	elevator:		stair		:moving_1    			:* = s_e_env_secret_stairs;
	elevator:		stair		:moving_2    			:* = s_e_env_secret_stairs;
	elevator:		rock		:level_1    			:* = s_e_smash_rockbeast;
	elevator:		hub			:level_1    			:* = s_e_spell_gom_skull_rain_hit;
	elevator:		hub			:level_2    			:* = s_e_spell_gom_skull_rain_hit;
    elevator:       hub         :moving_1               :* = s_e_env_volcanic_geyser;
    elevator:       hub         :moving_2               :* = s_e_env_volcanic_geyser;
    elevator:       gom         :moving_1				:* = s_e_nis_gom_platform_move;
    elevator:       gom         :level_2				:* = s_e_nis_gom_platform_stop;
    elevator:       bigplate	:moving_1				:* = s_e_spell_gom_skull_storm_hit;
	elevator:       bigplate	:moving_2				:* = s_e_spell_fire_pillar_cast;
	elevator:       floatplate  :level_1				:* = s_e_spell_curse_cast; //was calling possess_cast which was deleted as dupe -MM 01.26.02
	elevator:       floatplate  :moving_1               :* = s_e_spell_shadow_walk_cast;
	elevator:       floatplate  :moving_2               :* = s_e_spell_shadow_walk_cast;
	elevator:       floatplate  :level_2                :* = s_e_spell_fire_pillar_cast;
	elevator:		stone_jaw	:level_2				:* = s_e_smash_rockbeast;
	elevator:		stone_jaw	:moving_1				:* = s_e_env_door_stone_open;
	elevator:		stone_jaw	:moving_2				:* = s_e_env_door_stone_open;

    //Shrines
	health: 		generic     :sound1	         		:* = s_e_env_shrine_health;
	health: 		generic     :sound1	         		:priority = always;
	mana:     		generic     :sound1        			:* = s_e_env_shrine_mana;
	mana:     		generic     :sound1        			:priority = always;

	//////////
    //ATTACKS
    //////////

	// MISSES //--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//
    claw:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	claw:		generic			:attack				:priority = low;

	flesh:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	flesh:		generic			:attack				:priority = low;

	ice:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	ice:		generic			:attack				:priority = low;

	steelblunt:generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	steelblunt:generic			:attack				:priority = low;

	steeledge:generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	steeledge:generic			:attack				:priority = low;

	steelsword:generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	steelsword:generic			:attack				:priority = low;

	steel:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	steel:		generic			:attack				:priority = low;

	stone:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	stone:		generic			:attack				:priority = low;

	teeth:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	teeth:		generic			:attack				:priority = low;

	wood:		generic			:attack				:* = s_e_swing_01_SED;// all misses SED based on 2002-05-01 (SED=4,.73-1.26)
	wood:		generic			:attack				:priority = low;
	//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--

	// HITS //--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--//--
	arrow:		generic			:attack_hit_glance	:* = s_e_hit_arrow_generic_SED;	// 2001-04-24b , SED based on 2002-05-01 (SED=2,.9-1.1)
	arrow:		claw			:attack_hit_glance	:* = s_e_hit_arrow_flesh_SED;	// 2001-05-08b , SED based on 2002-05-01 (SED=2,.9-1.1)
	arrow:		teeth			:attack_hit_glance	:* = s_e_hit_arrow_flesh_SED;	// 2001-05-08b
	arrow:		flesh			:attack_hit_glance	:* = s_e_hit_arrow_flesh_SED;	// 2001-05-08b
	arrow:		leather			:attack_hit_glance	:* = s_e_hit_arrow_leather_SED; // 2001-05-08b , SED based on 2002-05-01 (SED=2,.9-1.1)
	arrow:		steel			:attack_hit_glance	:* = s_e_hit_arrow_steel_SED;	// 2001-03-06  arrow_armor.wav , SED based on 2002-05-01 (SED=2,.9-1.1)
	//arrow:		stone			:attack_hit_glance	:* = s_e_hit_arrow_stone;// 2001-02-25  was "hitsword_krugcomm.WAV" (last 1/2 cut in SForge by MarshM)
	arrow:		stone			:attack_hit_glance	:* = s_e_hit_arrow_stone_SED; 	// 2002-01-25 , SED based on 2002-05-01 (SED=2,.9-1.1)
	arrow:		ice				:attack_hit_glance	:* = s_e_hit_arrow_ice_SED;		// 2001-06-05, SED based on 2002-05-01 (SED=3,.9-1.1)
	arrow:		wood			:attack_hit_glance	:* = s_e_hit_arrow_wood_SED;	// 2000-02-24  sword_wood.wav , SED based on 2002-05-01 (SED=3,.9-1.1)

	claw:		generic			:attack_hit_glance	:* = s_e_hit_claw_flesh_SED;	// 2001-05-08b , SED based on 2002-05-01 (SED=2,.9-1.1)
	claw:		claw			:attack_hit_glance	:* = s_e_hit_claw_flesh_SED;	// 2001-05-08b
	claw:		teeth			:attack_hit_glance	:* = s_e_hit_claw_flesh_SED;	// 2001-05-08b
	claw:		flesh			:attack_hit_glance	:* = s_e_hit_claw_flesh_SED;	// 2001-05-08b
	claw:		leather			:attack_hit_glance	:* = s_e_hit_claw_leather_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	claw:		steel			:attack_hit_glance	:* = s_e_hit_claw_steel_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	claw:		stone			:attack_hit_glance	:* = s_e_hit_claw_stone_SED;	// 2001-05-10, SED based on 2002-05-01 (SED=2,.9-1.1)
	claw:		ice				:attack_hit_glance	:* = s_e_hit_claw_ice_SED;		// 2001-06-08, SED based on 2002-05-01 (SED=2,.9-1.1)
	claw:		wood			:attack_hit_glance	:* = s_e_hit_claw_wood_SED;		// 2001-07-02b, SED based on 2002-05-01 (SED=2,.9-1.1)

	flesh:		generic			:attack_hit_glance	:* = s_e_hit_flesh_flesh_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	flesh:		claw			:attack_hit_glance	:* = s_e_hit_flesh_flesh_SED;	// 2001-05-08b
	flesh:		teeth			:attack_hit_glance	:* = s_e_hit_flesh_flesh_SED;	// 2001-05-08b
	flesh:		flesh			:attack_hit_glance	:* = s_e_hit_flesh_flesh_SED;	// 2001-05-08b
	flesh:		leather			:attack_hit_glance	:* = s_e_hit_flesh_leather_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	flesh:		steel			:attack_hit_glance	:* = s_e_hit_flesh_steel_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	flesh:		stone			:attack_hit_glance	:* = s_e_hit_flesh_stone_SED;	// 2001-05-10, SED based on 2002-05-01 (SED=2,.9-1.1)
	flesh:		ice				:attack_hit_glance	:* = s_e_hit_flesh_ice_SED;		// 2001-06-05, SED based on 2002-05-01 (SED=2,.9-1.1)
	flesh:		wood			:attack_hit_glance	:* = s_e_hit_flesh_wood_SED;	// 2001-07-02b, SED based on 2002-05-01 (SED=2,.9-1.1)

	steelblunt:	generic			:attack_hit_glance	:* = s_e_hit_steelblunt_med2_SED;	// 2001-04-20, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelblunt:	claw			:attack_hit_glance	:* = s_e_hit_steelblunt_med2_SED;	// 2001-04-20
	steelblunt:	teeth			:attack_hit_glance	:* = s_e_hit_steelblunt_med2_SED;	// 2001-04-20
	steelblunt:	flesh			:attack_hit_glance	:* = s_e_hit_steelblunt_med2_SED;	// 2001-04-20
	steelblunt:	leather			:attack_hit_glance	:* = s_e_hit_steelblunt_med2_SED;	// 2001-04-20
	steelblunt:	steel			:attack_hit_glance	:* = s_e_hit_steelblunt_steel_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelblunt:	stone			:attack_hit_glance	:* = s_e_hit_steelblunt_med1_SED;	// 2001-04-20, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelblunt:	ice				:attack_hit_glance	:* = s_e_hit_steelblunt_ice_SED;	// 2001-06-05, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelblunt:	wood			:attack_hit_glance	:* = s_e_hit_steelblunt_wood_SED;	// 2001-07-02b, SED based on 2002-05-01 (SED=2,.9-1.1)

	steeledge:	generic			:attack_hit_glance	:* = s_e_hit_steeledge_flesh2_SED;	// 2001-04-12, SED based on 2002-05-01 (SED=2,.9-1.1)
	steeledge:	claw			:attack_hit_glance	:* = s_e_hit_steeledge_flesh1_SED;	// 2001-04-12
	steeledge:	teeth			:attack_hit_glance	:* = s_e_hit_steeledge_flesh1_SED;	// 2001-04-12
	steeledge:	flesh			:attack_hit_glance	:* = s_e_hit_steeledge_flesh1_SED;	// 2001-04-12 based, SED=0.5-1.75
	steeledge:	leather			:attack_hit_glance	:* = s_e_hit_steeledge_leather_SED;	// 2001-05-10, SED based on 2002-05-01 (SED=2,.9-1.1)
	steeledge:	steel			:attack_hit_glance	:* = s_e_hit_steeledge_steel_SED;	// 2001-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	steeledge:	stone			:attack_hit_glance	:* = s_e_hit_steeledge_stone_SED;	// 2001-02-25 was "hitsteel_rockbeast.wav", SED based on 2002-05-01 (SED=2,.9-1.1)
	steeledge:	ice				:attack_hit_glance	:* = s_e_hit_steeledge_ice_SED;		// 2001-06-05, SED based on 2002-05-01 (SED=2,.9-1.1)
	steeledge:	wood			:attack_hit_glance	:* = s_e_hit_steeledge_wood_SED;	// 2001-07-02b, SED based on 2002-05-01 (SED=2,.9-1.1)

	steelsword:	generic			:attack_hit_glance	:* = s_e_hit_steelsword_flesh3_SED; // 2001-04-13, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelsword:	claw			:attack_hit_glance	:* = s_e_hit_steelsword_flesh3_SED; // 2001-04-13
	steelsword:	teeth			:attack_hit_glance	:* = s_e_hit_steelsword_flesh3_SED; // 2001-04-13
	steelsword:	flesh			:attack_hit_glance	:* = s_e_hit_steelsword_flesh3_SED; // 2001-04-13
	steelsword:	leather			:attack_hit_glance	:* = s_e_hit_steelsword_flesh1_SED; // 2001-04-12, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelsword:	steel			:attack_hit_glance	:* = s_e_hit_steelsword_steel_SED;	// 2001-02-25 was "hitarmor_hero.wav", SED based on 2002-05-01 (SED=2,.9-1.1)
	steelsword:	stone			:attack_hit_glance	:* = s_e_hit_steelsword_stone_SED;	// 2001-11-08a (was 2001-06-28), SED based on 2002-05-01 (SED=2,.9-1.1)
	steelsword:	ice				:attack_hit_glance	:* = s_e_hit_steelsword_ice_SED;	// 2001-06-05, SED based on 2002-05-01 (SED=2,.9-1.1)
	steelsword:	wood			:attack_hit_glance	:* = s_e_hit_steeledge_wood_SED;	// 2001-07-02b <-- NEED s_e_hit_steelsword_wood, SED based on 2002-05-01 (SED=2,.9-1.1)

	stone:		generic			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	stone:		claw			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	stone:		teeth			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	stone:		flesh			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12 based, SED=0.5-1.75
	stone:		leather			:attack_hit_glance	:* = s_e_hit_woodblunt_med3_SED;	// 2000-04-12, SED based on 2002-05-01 (SED=2,.9-1.1)
	stone:		steel			:attack_hit_glance	:* = s_e_hit_wood_steel_SED;		// 2000-05-08b
	stone:		stone			:attack_hit_glance	:* = s_e_hit_wood_stone_SED;		// 2000-05-08b
	stone:		ice				:attack_hit_glance	:* = s_e_hit_wood_ice_SED;			// 2001-06-05
	stone:		wood			:attack_hit_glance	:* = s_e_hit_wood_wood_SED;			// 2000-02-24  was "sword_wood.wav"

	stonesmall:	generic			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b s_e_hit_flesh_leather based SED=2.0
	stonesmall:	claw			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	teeth			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	flesh			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	leather			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	steel			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	stone			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	ice				:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b
	stonesmall:	wood			:attack_hit_glance	:* = s_e_hit_stonesmall_all_SED;		// 2001-05-08b

/*
	teeth:		generic			:attack_hit_glance	:* = s_e_hit_teeth_flesh;		// 2001-07-02b
	teeth:		claw			:attack_hit_glance	:* = s_e_hit_teeth_flesh;		// 2001-07-02b
	teeth:		teeth			:attack_hit_glance	:* = s_e_hit_teeth_flesh;		// 2001-07-02b
	teeth:		flesh			:attack_hit_glance	:* = s_e_hit_teeth_flesh;		// 2001-07-02b
	teeth:		leather			:attack_hit_glance	:* = s_e_hit_teeth_leather;		// 2001-07-02b
	teeth:		steel			:attack_hit_glance	:* = s_e_hit_teeth_steel;		// 2001-07-02b
	teeth:		stone			:attack_hit_glance	:* = s_e_hit_teeth_stone;		// 2001-07-02b
	teeth:		ice				:attack_hit_glance	:* = s_e_hit_teeth_ice;			// 2001-07-02b
	teeth:		wood			:attack_hit_glance	:* = s_e_hit_teeth_wood;		// 2001-07-02b
*/

	teeth:		generic			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24 based, SED=.95-1.05
	teeth:		claw			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		teeth			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		flesh			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		leather			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		steel			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		stone			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		ice				:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24
	teeth:		wood			:attack_hit_glance	:* = s_e_hit_teeth_leather_SED;	// 2001-09-24

	wood:		generic			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	wood:		claw			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	wood:		teeth			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12
	wood:		flesh			:attack_hit_glance	:* = s_e_hit_woodblunt_med2_SED;	// 2000-04-12 based, SED=0.5-1.75
	wood:		leather			:attack_hit_glance	:* = s_e_hit_woodblunt_med3;		// 2000-04-12
	wood:		steel			:attack_hit_glance	:* = s_e_hit_wood_steel_SED;		// 2000-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	wood:		stone			:attack_hit_glance	:* = s_e_hit_wood_stone_SED;		// 2000-05-08b, SED based on 2002-05-01 (SED=2,.9-1.1)
	wood:		ice				:attack_hit_glance	:* = s_e_hit_wood_ice_SED;			// 2001-06-05, SED based on 2002-05-01 (SED=2,.9-1.1)
	wood:		wood			:attack_hit_glance	:* = s_e_hit_wood_wood_SED;			// 2000-02-24  was "sword_wood.wav", SED based on 2002-05-01 (SED=2,.9-1.1)
	
	// Colab Materials
	collab_door_large:	generic	:door_open		:* = s_e_env_door_metal_sliding_small;
	collab_door_large:	generic	:door_close		:* = s_e_env_door_metal_sliding_small;
	collab_door_large:	generic	:door_blocked	:* = s_e_hit_wood_wood;
	collab_door_large:	generic	:door_locked	:* = s_e_gui_put_down_armor_chain;
	collab_door_small:	generic	:door_open		:* = s_e_env_door_dungeon;
	collab_door_small:	generic	:door_close		:* = s_e_env_door_dungeon;
	collab_door_small:	generic	:door_blocked	:* = s_e_hit_wood_wood;
	collab_door_small:	generic	:door_locked	:* = s_e_gui_put_down_armor_chain;

//------------------------------------------------------------------------------
}

[global_voice]
{
	/*	format:

			$ note that multiple sounds are supported per event name. we'll
			  just pick one at random.

		[event]
		{
			* = yaaaarrrrrr;
			* = yaaaarrrrrr_2;
			* = yo;
			...
		}

		...
	*/

	break:							* = s_e_IH_break_wood_glance;
	drink:							* = s_e_potion_drink;
	drink:							priority = always;

	order_attack:					* = s_e_gui_order_attack;
	order_attack:					priority = always;
	order_cast:						* = s_e_gui_order_cast;
	order_cast:						priority = always;
	order_move:						* = s_e_gui_order_move;
	order_move:						priority = always;
	order_cant_move:				* = s_e_gui_order_cant_move_SED;
	order_cant_move:				priority = always;
	order_out_of_mana:				* = s_e_gui_out_of_mana;
	order_out_of_mana:				priority = always;

	// Global interface sounds
	select_char:					* = s_e_IH_select_char;
	select_char:					priority = always;
	pick_up:						* = s_e_gui_pick_up;
	put_down:						* = s_e_gui_put_down_swish;
	put_down_toss:					* = s_e_gui_pick_up;
	sell:							* = s_e_gui_put_down_gold;

	frontend_menu_close:			* = s_e_frontend_menu_close;
	frontend_menu_enter:			* = s_e_frontend_menu_enter;
	frontend_menu_open:				* = s_e_frontend_menu_open;
	frontend_menu_roll:				* = s_e_frontend_menu_roll;
	frontend_arrow_button:			* = s_e_frontend_arrow_button;
	frontend_big_button:			* = s_e_frontend_big_button;
	frontend_small_button:			* = s_e_frontend_small_button;
	frontend_tiny_button:			* = s_e_frontend_tiny_button;
	frontend_logo_flyin:			* = s_e_frontend_logo_flyin;
	frontend_logo_flyout:			* = s_e_frontend_logo_flyout;

	gui_inventory_open:				* = s_e_gui_inventory_sheet;
	gui_inventory_open:				priority = always;
	gui_inventory_close:			* = s_e_gui_inventory_sheet;
	gui_inventory_close:			priority = always;
	gui_inventory_full:				* = s_e_gui_inventory_full;
	gui_inventory_full:				priority = always;
	gui_inventory_not_equippable:	* = s_e_gui_inventory_not_equippable;
	gui_inventory_not_equippable:	priority = always;
	gui_spellbook_open:				* = s_e_gui_spell_book;
	gui_spellbook_open:				priority = always;
	gui_spellbook_close:			* = s_e_gui_spell_book;
	gui_spellbook_close:			priority = always;

	// Environmental Sounds
    env_bats:                      	* = s_e_env_bats;               // from set 2001-05-10
	env_blast_furnace:             	* = s_e_env_blast_furnace;      // from set 2001-07-11
	env_blast_furnace:				priority = always;
	env_brook:                     	* = s_e_env_brook;              // from set 2001-05-05
	env_brook:						priority = always;
	env_burning_large:             	* = s_e_burning_large;          // for big on-fire stuff like the barn
	env_burning_small:             	* = s_e_burning_small;          // for torches and small campfires
	env_chains_rustling:           	* = s_e_env_chains_rustling;    // from set 2001-07-15
	env_churchbell:                	* = s_e_env_churchbell;         // from set 2001-07-11
	env_churchbell:					priority = high;
	env_conveyer:                  	* = s_e_env_conveyer;           // from set 2001-07-11
	env_conveyer:					priority = always;
	env_crypt:						* = s_e_ambient_crypt;
	env_dragon_breath:              * = s_e_dragon_breath;
	env_drip_water:             	* = s_e_env_water_slosh3;
	env_drip_single:             	* = s_e_env_water_drip_single;
	env_droog_bow:             		* = s_e_call_droog_bow;			// played by bowing droog.
	env_electric_charge:            * = s_e_spell_charged_staff_cast;	// used for Merik NIS
	env_fire_small:                	* = s_e_env_fire_small;         // from set 2001-07-10 - for campfire & fireplace
	env_fury_shriek:               	* = s_e_env_fury_shriek;        // from set 2001-07-15
	env_fury_teeth_chatter:         * = s_e_env_fury_teeth_chatter; // from set 2001-07-15
	env_gears_metal_large:         	* = s_e_env_gears_metal_large;  // from set 2001-07-11
	env_gears_metal_large:			priority = always;
	env_gears_mill_lg:             	* = s_e_env_gears_mill_lg;      // from set 2001-05-15
	env_gears_mill_lg:				priority = always;
	env_gears_mill_sm:             	* = s_e_env_gears_mill_sm;      // from set 2001-05-15
	env_gears_mill_sm:				priority = always;
	env_geyser_lava:             	* = s_e_env_volcanic_geyser;
	env_geyser_lava2:               * = s_e_env_geyser_lava;
	env_geyser_steam:             	* = s_e_env_pipe_steam_burst;
	env_hammer_anvil:              	* = s_e_env_hammer_anvil;       // Hook up via anims??
	env_hammer_anvil:				priority = always;
	env_haunting:                  	* = s_e_env_haunting;           // from set 2001-07-15
	env_horn:                      	* = s_e_env_horn;               // from set 2001-07-11
	env_ice_break1:                 * = s_e_die_ice_warrior;              // used for Merik NIS
	env_ice_break2:                 * = s_e_env_break_container_clay;         // used for Merik NIS
	env_ice_break3:                 * = s_e_spell_lightning_storm_cast;   // used for Merik NIS
	env_lakeside:                  	* = s_e_env_lakeside;           // from set 2001-05-10
	env_lakeside:                  	* = s_e_env_lakeside;           // lapping waves sound
	env_lava_bubbling:             	* = s_e_env_lava_bubbling;      // from set 2001-07-10
	env_lava_falls:             	* = s_e_env_lava_bubbling;      // from set 2001-07-10
	env_lava_falls:					priority = always;
	env_machinery:                 	* = s_e_env_machinery;          // from set 2001-07-11
	env_maniacal_laughter:         	* = s_e_env_maniacal_laughter;  // from set 2001-07-15
	env_moaning:                   	* = s_e_env_moaning;            // from set 2001-07-15
	env_motors:                    	* = s_e_env_motors;             // from set 2001-07-11
	env_ocean:                     	* = s_e_env_ocean;              // from set 2001-07-10
	env_ocean:						priority = always;
	env_pipe_liquid:                * = s_e_env_pipe_liquid;        // from set 2001-07-11
	env_pipe_liquid:				priority = always;
	env_pipe_steam_burst:          	* = s_e_env_pipe_steam_burst;   // from set 2001-07-11
	env_pipe_steam_constant:       	* = s_e_env_pipe_steam_constant;// from set 2001-07-11
	env_pipe_steam_constant:		priority = always;
	env_rats_squeakskitter:         * = s_e_env_rats_squeakskitter; // from set 2001-07-15
	// env_scream_female:             	* = s_e_env_scream_female;      // from set 2001-07-15 $$$DON"T USE THIS -MM 01.16.02
	env_scream_male:               	* = s_e_env_scream_male;        // from set 2001-07-15
	env_seagulls:                  	* = s_e_env_seagulls;           // from set 2001-07-10
	env_singe_ambient:             	* = s_e_env_singe_ambient;      // from set 2001-07-10
	env_spider_clicking:           	* = s_e_env_spider_clicking;    // from set 2001-07-15
	env_spider_scurry:             	* = s_e_env_spider_scurry;      // from set 2001-07-15
	env_stone_shatter:             	* = s_e_explode_rockbeast;
	env_tesla_coil:                	* = s_e_env_tesla_coil;         // from set 2001-07-11
    env_torch_lighting:             * = s_e_env_torch_lighting;
	env_tremor:	                	* = s_e_spell_tremor_cast;      // used for Merik NIS
	env_voices_whispering:         	* = s_e_env_voices_whispering;  // from set 2001-07-15
	env_waterfall:                 	* = s_e_env_waterfall;          // from set 2001-05-10 - for larger waterfalls
	env_waterfall:					priority = always;
	env_waterwheel:                	* = s_e_env_waterwheel;         // from set 2001-05-10
	env_waterwheel:					priority = always;
	env_wolf_howl:                 	* = s_e_env_wolf_howl;          // from set 2001-05-10

	// Shrine Sounds
	env_shrine_health:				* = s_e_env_shrine_health;
	env_shrine_health:				priority = always;
	env_shrine_mana:				* = s_e_env_shrine_mana;
	env_shrine_mana:				priority = always;

	////////////////////////////////////////////////////////////////////////////

	// Ambient Sounds
	amb_thunder:		* = s_e_ambient_thunder;
	amb_wind_01:		* = s_e_ambient_wind_01;
	amb_wind_01b:		* = s_e_ambient_wind_01b;
	amb_wind_02:		* = s_e_ambient_wind_02;
	amb_woods_01:		* = s_e_ambient_woods_01;
    amb_rain_01:        * = s_e_ambient_rain1;

	amb_tavern:			* = s_e_env_tavern;							// from set 2001-06-07
	amb_crickets:		* = s_e_env_crickets;						// from set 2001-07-02
	amb_water_drip:		* = s_e_env_water_drip;						// 2001-05-14 (needs revision)
	amb_birds:			* = s_e_env_birds;							// from set 2001-07-02
	amb_birds1:			* = s_e_ambient_bird1;						// from set 2000-02-24
    amb_birds2:			* = s_e_ambient_bird2;						// from set 2000-02-24
	amb_wind_chimes:	* = s_e_env_wind_chimes;					// from set 2001-07-15
	amb_wind_monotonic:	* = s_e_env_wind_monotonic;					// from set 2001-07-15

	// Quest Sounds
	quest_complete: * = s_e_level_up_quest;
	quest_complete:	priority = always;
	quest_update:	* = s_e_level_up_quest_update;
	quest_update:	priority = always;

	// Secret Sounds
	secret_found_1:	* = s_e_env_secret_found1;
	secret_found_2:	* = s_e_env_secret_found2;
	secret_found_3:	* = s_e_env_secret_found3;
	secret_nearby:	* = s_e_env_secret_nearby;

    // Scripted Event Sounds
    mp_inventor:    	* = s_e_fidget_goblin_escape;
	gi_teleport:    	* = s_e_fidget_goblin_inv_teleport;
	gi_staff_powerdown:	* = s_e_nis_goblin_inv_staff_powerdown;
	cos_gen_start:  	* = s_e_nis_chamberstars_generator_start;
    cos_ring:			* = s_e_nis_chamberstars_ring_spinup;
    cos_gen_run:		* = s_e_nis_chamberstars_generator_run;
    cos_flash:			* = s_e_nis_chamberstars_flash;
   	cos_gen_amp:		* = s_e_nis_chamberstars_generator_amp;
	gom_elevator_move:	* = s_e_nis_gom_platform_move;
	gom_elevator_stop:	* = s_e_nis_gom_platform_stop;

}

